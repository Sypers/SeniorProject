import unittest

import pandas
import user_data.strategies.ShortTerm as strategy


class MyTestCase(unittest.TestCase):
    def setUp(self) -> None:
        self.datalist = [[1661904000000, 0.3268, 0.3272, 0.3267, 0.3271, 206000.0],
                         [1661904060000, 0.327, 0.3271, 0.3268, 0.3268, 82736.0],
                         [1661904120000, 0.3269, 0.327, 0.3268, 0.3269, 62160.0],
                         [1661904180000, 0.3269, 0.3271, 0.3267, 0.3271, 91059.0],
                         [1661904240000, 0.327, 0.3279, 0.327, 0.3278, 91188.0],
                         [1661904300000, 0.3278, 0.3281, 0.3276, 0.3277, 100707.0],
                         [1661904360000, 0.3276, 0.3279, 0.3276, 0.3278, 60044.0],
                         [1661904420000, 0.3279, 0.3281, 0.3278, 0.328, 51135.0],
                         [1661904480000, 0.3281, 0.3285, 0.328, 0.3284, 168321.0],
                         [1661904540000, 0.3283, 0.3284, 0.3279, 0.3279, 84324.0],
                         [1661904600000, 0.3279, 0.3282, 0.3279, 0.3281, 75960.0],
                         [1661904660000, 0.3281, 0.3282, 0.328, 0.328, 526499.0],
                         [1661904720000, 0.328, 0.3282, 0.328, 0.3282, 117796.0],
                         [1661904780000, 0.3281, 0.3282, 0.3277, 0.3277, 105375.0],
                         [1661904840000, 0.3277, 0.328, 0.3276, 0.3279, 63260.0],
                         [1661904900000, 0.3279, 0.3281, 0.3278, 0.328, 73810.0],
                         [1661904960000, 0.3281, 0.3281, 0.328, 0.328, 33347.0],
                         [1661905020000, 0.328, 0.328, 0.3279, 0.3279, 41062.0],
                         [1661905080000, 0.3279, 0.3281, 0.3279, 0.328, 143220.0],
                         [1661905140000, 0.328, 0.3281, 0.3279, 0.328, 140828.0],
                         [1661905200000, 0.3281, 0.3282, 0.328, 0.3282, 98650.0],
                         [1661905260000, 0.3283, 0.3284, 0.3282, 0.3284, 22342.0],
                         [1661905320000, 0.3284, 0.3285, 0.3282, 0.3283, 80834.0],
                         [1661905380000, 0.3283, 0.3284, 0.3282, 0.3283, 53501.0],
                         [1661905440000, 0.3283, 0.3287, 0.3282, 0.3286, 51605.0],
                         [1661905500000, 0.3286, 0.3289, 0.3285, 0.3286, 103523.0],
                         [1661905560000, 0.3285, 0.3288, 0.3285, 0.3287, 50152.0],
                         [1661905620000, 0.3287, 0.3289, 0.3286, 0.3288, 92205.0],
                         [1661905680000, 0.3287, 0.3291, 0.3287, 0.3289, 206837.0],
                         [1661905740000, 0.3288, 0.329, 0.3286, 0.3286, 67059.0],
                         [1661905800000, 0.3286, 0.3289, 0.3286, 0.3289, 23757.0],
                         [1661905860000, 0.3289, 0.3292, 0.3289, 0.3292, 121338.0],
                         [1661905920000, 0.3293, 0.3293, 0.3291, 0.3293, 134238.0],
                         [1661905980000, 0.3292, 0.3293, 0.329, 0.3292, 60155.0],
                         [1661906040000, 0.3292, 0.3293, 0.3291, 0.3293, 27356.0],
                         [1661906100000, 0.3292, 0.3295, 0.3292, 0.3294, 165885.0],
                         [1661906160000, 0.3294, 0.3295, 0.3294, 0.3295, 63232.0],
                         [1661906220000, 0.3294, 0.3294, 0.329, 0.3294, 511449.0],
                         [1661906280000, 0.3293, 0.3295, 0.3293, 0.3293, 67988.0],
                         [1661906340000, 0.3293, 0.3295, 0.3293, 0.3294, 49332.0],
                         [1661906400000, 0.3293, 0.3295, 0.3293, 0.3295, 39441.0],
                         # This row is supposed to signal an entry
                         [1661906460000, 0.3295, 0.3295, 0.3292, 0.3292, 125491.0]]
        self.metadata = {'pair': "XRP/USDT"}
        self.dataframe = pandas.DataFrame(data=self.datalist,
                                          columns=['date', 'open', 'high', 'low', 'close', 'volume'], dtype=float)
        strategy.ShortTerm.populate_indicators(self, dataframe=self.dataframe, metadata=self.metadata)

    def test_entry_signal(self):
        self.dataframe = strategy.ShortTerm.populate_entry_trend(self, dataframe=self.dataframe, metadata=self.metadata)
        self.assertEqual(self.dataframe['enter_long'].iloc[-1], 1)  # add assertion here


if __name__ == '__main__':
    unittest.main()
